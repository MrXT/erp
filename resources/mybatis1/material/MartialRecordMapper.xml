<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MartialRecordMapper">

	<!--表名 -->
	<sql id="tableName">
		BS_MATERIAL_RECORD
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		MATERIAL_ID,
		FROM_USER_ID,
		TO_USER_ID,
		CTIME,
		FROM_DEPARTMENT_ID,
		TO_DEPARTMENT_ID,
		RECORD_ID,
		TYPE
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{MATERIAL_ID},
		#{FROM_USER_ID},
		#{TO_USER_ID},
		#{CTIME},
		#{FROM_DEPARTMENT_ID},
		#{TO_DEPARTMENT_ID},
		#{RECORD_ID},
		#{TYPE}
	</sql>
	<!-- 新增 -->
	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>
	<select id="selectDepartmentByuserId" resultType="pd" parameterType="pd">
		select d.department_id,d.department_name from bs_department d
		inner join
		bs_department_station_user dsu on dsu.department_id =d.department_id
		where dsu.user_id = #{USER_ID}
		limit 1
	</select>
	<!-- 删除 -->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where
		RECORD_ID = #{RECORD_ID}
	</delete>

	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		MATERIAL_ID = #{MATERIAL_ID},
		FROM_USER_ID = #{FROM_USER_ID},
		TO_USER_ID = #{TO_USER_ID},
		CTIME = #{CTIME},
		FROM_DEPARTMENT_ID =
		#{FROM_DEPARTMENT_ID},
		TO_DEPARTMENT_ID = #{TO_DEPARTMENT_ID},
		RECORD_ID = RECORD_ID
		where
		RECORD_ID = #{RECORD_ID}
	</update>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		RECORD_ID = #{RECORD_ID}
	</select>
	<select id="dataUselistPage" parameterType="page" resultType="pd">
		SELECT
		m.material_id,
		m.materialtype_id,
		m.materialname_id,
		m.brand,
		m.model,
		m.param,
		m.price,
		u.name,
		u.USER_ID,
		u.area deposit_office,
		u.floor
		deposit_floor,
		u.office_no deposit_house,
		m.remark,
		m.ctime,
		m.STATUS,
		mt.MATERIAL_TYPE_NAME AS material_type_name,
		mn.MATERIAL_NAME AS material_name,
		m.serial_number,
		mr.CTIME getTime
		FROM
		bs_material AS m
		right join bs_material_record mr on mr.material_id = m.material_id
		inner join sys_user u on
		u.user_id = mr.to_user_id
		INNER JOIN bs_materialtype
		AS mt ON mt.materialtype_id = m.materialtype_id
		INNER JOIN bs_materialname AS mn ON
		mn.MATERIALNAME_ID = m.materialname_id
		where 1=1
		<if test="pd.MATERIALTYPE_ID!= null and pd.MATERIALTYPE_ID!= ''"><!-- 关键词检索 -->
			and m.materialtype_id = #{pd.MATERIALTYPE_ID}
		</if>
		<if test="pd.MATERIALNAME_ID!= null and pd.MATERIALNAME_ID!= ''"><!-- 关键词检索 -->
			and m.materialname_id = #{pd.MATERIALNAME_ID}
		</if>
		order by m.ctime desc
	</select>
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		mr.MATERIAL_ID,
		mr.FROM_USER_ID,
		mr.TO_USER_ID,
		mr.CTIME,
		mr.RECORD_ID,
		mt.MATERIAL_TYPE_NAME,
		mn.MATERIAL_NAME,
		fu.NAME AS FROM_NAME,
		tu.NAME AS
		TO_NAME,
		fd.DEPARTMENT_NAME AS FROM_DEPARTMENT_NAME,
		td.DEPARTMENT_NAME AS TO_DEPARTMENT_NAME,
		m.BRAND,
		m.SERIAL_NUMBER
		from
		<include refid="tableName"></include>
		mr
		inner join bs_material m on m.material_id = mr.material_id
		inner join bs_materialname mn on mn.materialname_id = m.materialname_id
		inner join
		bs_materialtype mt on mt.materialtype_id = m.materialtype_id
		inner join bs_department fd on fd.department_id = mr.from_department_id
		inner join
		bs_department td on td.department_id = mr.to_department_id
		inner join sys_user fu on fu.user_id = mr.from_user_id
		inner join sys_user tu on tu.user_id
		= mr.to_user_id
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			fu.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or tu.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
		<if test="pd.MATERIALTYPE_ID != null and pd.MATERIALTYPE_ID != ''"><!-- 关键词检索 -->
			and mt.MATERIALTYPE_ID = #{pd.MATERIALTYPE_ID}
		</if>
		<if test="pd.FROM_DEPARTMENT_ID != null and pd.FROM_DEPARTMENT_ID != ''"><!-- 关键词检索 -->
			and mr.from_department_id = #{pd.FROM_DEPARTMENT_ID}
		</if>
		<if test="pd.TO_DEPARTMENT_ID != null and pd.TO_DEPARTMENT_ID != ''"><!-- 关键词检索 -->
			and mr.to_department_id = #{pd.TO_DEPARTMENT_ID}
		</if>
		<if test="pd.type != null and pd.type != ''"><!-- 关键词检索 -->
			and mr.type = #{pd.type}
		</if>
		<if test="pd.date != null and pd.date != ''">
			and date_format(mr.ctime,'%Y-%m-%d') = #{date}
		</if>
		order by mr.ctime desc
	</select>

	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
	</select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
		RECORD_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- fh313596790qq(青苔) -->
</mapper>